<!DOCTYPE html>
<html lang="en">
  <head>
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Starter Map</title>

    <!-- Bootstrap core CSS -->
    <link href="<?php echo base_url();?>assets/css/bootstrap.min.css" rel="stylesheet">
    <!-- Custom styles for this template -->
    <link href="<?php echo base_url();?>assets/css/starter-template.css" rel="stylesheet">
	<!-- Normalize CSS-->
	<link href="<?php echo base_url();?>assets/css/normalize.css" rel="stylesheet">
	<!-- Smoke CSS -->
	<link href="<?php echo base_url();?>assets/css/smoke.css" rel="stylesheet">
	
	
    <!-- Just for debugging purposes. Don't actually copy this line! -->
    <!--[if lt IE 9]><script src="<?php echo base_url();?>assets/js/ie8-responsive-file-warning.js"></script><![endif]-->

    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
      <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
  </head>
  <body>
    <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="#">Google Map</a>
        </div>
        <div class="collapse navbar-collapse">
          <ul class="nav navbar-nav">
			<li class=""><a href="<?php echo base_url("index.php/google/routes");?>">Route</a></li>
            <li class="active"><a href="#">Add Route</a></li>
            <li><a href="#about">Hazard</a></li>
            <li><a href="#about">Add Hazard</a></li>
          </ul>
        </div>
      </div>
    </div>
	
	<div class="container">
		<div class="starter-template">
			<div id="map" style="width: 100%; height: 600px;">
				<span style="color:Gray;">Loading map...</span>
			</div>
		</div>
	</div>

<div class="container">
	<div class="row hidden">
		<div class="col-md-12"><h3>Locations</h3></div>
		<div class="clearfix"></div>
		<div class="col-md-8">
			<!--<input type="button" value="Load Waypoints" onclick="load_waypoints()" style="display:none;">-->
			Type in an address or click on the map to add a location
			<input type="text" id="location" style="width:100%;" />
			<input type="button" onclick="AddLocation()" value="Add location"/>
		</div>
		<div class="col-md-4">	
			<label>Latitude: <input type="text" id="lat" style="width:100px;" /></label>
			<label>Longitude: <input type="text" id="lng" style="width:100px;" /></label>
			<input type="button" onclick="AddLatLng()" value="Add lat/lng"/>
		</div>
	</div>
	<div class="clearfix"></div>
	<br />
	<div class="row">
		<div class="col-md-12">
			<table id="waypointsLocations" style="width:100%;">
				<thead>
					<tr>
						<th style="text-align:left;">Location</th>
						<th style="text-align:left;"><img src="http://www.doogal.co.uk/images/lat.png" alt="Latitude" />Latitude</th>
						<th style="text-align:left;"><img src="http://www.doogal.co.uk/images/lng.png" alt="Longitude" />Longitude</th>
						<th style="text-align:left;">Removes all locations from the map<input type="button" onclick="ClearPolyLine()" value="Clear"/></th>
						<th style="text-align:left;"></th>
						<th style="text-align:left;"></th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td colspan="4">Added locations will appear here</td>
					</tr>
				</tbody>
			</table>
		</div>
	</div>
	<div class="clearfix"></div>	
	<div class="row" style="display:none;">
		<div class="col-md-12"><h3>Routing options</h3></div>
		<div class="col-md-12">
			<table>
				<tr>
					<td>
						<input type="checkbox" id="optimise" /><label for="optimise">One-way</label>
					</td>
					<td>If selected, the locations will be re-ordered to produce the shortest journey</td>
				</tr>
				<tr>
					<td>
						<input type="checkbox" id="roundTrip" /><label for="roundTrip">Round trip</label>
					</td>
					<td>If selected, your first location will be used as the end point of the journey</td>
				</tr>
				<tr >
					<td>
						<label for="routeType">Travelling by</label>
						<select id="routeType" ">
							<option>Driving</option>
							<option selected="selected" >Walking</option>
							<option>Public transport</option>
							<option>Cycling</option>
						</select>
					</td>
					<td></td>
				</tr>
			</table>
		</div>
	</div>
	<div class="clearfix"></div>
	<div class="row">
		<div class="col-md-12"><h3>Information</h3></div>
		<div class="col-md-12">
			<textarea class="form-control" rows="10"></textarea>
		</div>
	</div>
	<div class="clearfix"></div>
	<br />
	<div class="row">
		<div class="col-md-12">
			<input type="button" onclick="GetDirections()" value="Get directions" class="btn btn-info" />
			<input type="button" value="Save Waypoints" onclick="save_waypoints()" id="save_way" class="btn" />
		</div>
	</div>
	<div class="clearfix"></div>
	<div class="row">
		<div class="col-md-12">	
			<span id="distance"></span> <span id="duration"></span>
			<div id="directions"></div>
		</div>
	</div>	
</div>

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title" id="myModalLabel">Modal title</h4>
      </div>
      <div class="modal-body">
        ...
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>

   <!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>-->
     <script src="<?php echo base_url(); ?>assets/js/jquery.min.js"></script>
     <script src="<?php echo base_url(); ?>assets/js/bootstrap.min.js"></script>
	 <script src="<?php echo base_url();?>assets/js/site.js" type="text/javascript"></script>
	 <script src="<?php echo base_url();?>assets/js/json_code.js" type="text/javascript"></script>
	 <script src="<?php echo base_url();?>assets/js/smoke.min.js" type="text/javascript"></script>
	 <script src="http://maps.google.com/maps/api/js?libraries=places&amp;sensor=false" type="text/javascript"></script>

	
	 
<script type="text/javascript">
	$("#save_way").attr('disabled',true);
	
	//url for ajax
	var l = window.location;
	var base_url = l.protocol + "//" + l.host  + "/" + l.pathname.split('/')[1];
	var ren, ser;
	var data = {};
	//map options
    var latlng = new google.maps.LatLng(14.657134311228834, 121.05623297821063);
    var options = {
		zoom: 13,
        center: latlng,
		mapTypeControl: true,
		mapTypeControlOptions: {style: google.maps.MapTypeControlStyle.DROPDOWN_MENU},
		navigationControl: true,
        mapTypeId: google.maps.MapTypeId.ROADMAP,
        draggableCursor: "crosshair"
    };
	var rendererOptions = { draggable: true };	
	var directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);
	var locationsAdded = 1;
    var map = new google.maps.Map(document.getElementById("map"), options);
		map.controls[google.maps.ControlPosition.TOP_RIGHT].push(new FullScreenControl(map));
    var points = [];
    var markers = [];
	var clickCounter = 0;
	google.maps.event.addListener(map,"click", function(location) {
			GetLocationInfo(location.latLng, "Location " + locationsAdded);
			locationsAdded++;
	});
	var directions = new google.maps.DirectionsService();
	// autocomplete
	var autocomplete = new google.maps.places.Autocomplete(document.getElementById('location'), {});
	google.maps.event.addListener(autocomplete, 'place_changed', function() {
		var place = autocomplete.getPlace();
		GetLocationInfo(place.geometry.location, $('#location').val());
        map.setCenter(place.geometry.location);
        $("#location").val("");
	});
	
	
	
	//freeform map
		
	var path = new google.maps.MVCArray(), shiftPressed = false, poly;	
	google.maps.event.addDomListener(document, "keydown", function(e) { shiftPressed = e.shiftKey; });
    google.maps.event.addDomListener(document, "keyup", function(e) { shiftPressed = e.shiftKey; });
	
	
	  poly = new google.maps.Polyline({ map: map });
      google.maps.event.addListener(map, "click", function(evt) {
        if (shiftPressed || path.getLength() === 0) {
          path.push(evt.latLng);
		  if(path.getLength() === 1) {
			poly.setPath(path);
		  }
        } else {
          service.route({ origin: path.getAt(path.getLength() - 1), destination: evt.latLng, travelMode: google.maps.DirectionsTravelMode.DRIVING }, function(result, status) {
            if (status == google.maps.DirectionsStatus.OK) {
              for(var i = 0, len = result.routes[0].overview_path.length; i < len; i++) {
			    path.push(result.routes[0].overview_path[i]);
			  }
            }
          });
        }
      });
	  
	  
	//add latitude longtitude		
	function AddLatLng() {
		var latLong = new google.maps.LatLng($('#lat').val(), $('#lng').val());
        GetLocationInfo(latLong, "Location " + locationsAdded);
		locationsAdded++;
        map.setCenter(latLong);
		$("#lat").val("");
		$("#lng").val("");
	}
			
	function AddLocation(){
		var geocoder = new google.maps.Geocoder();
		geocoder.geocode({address: $("#location").val()}, function(results, status) {
			if (results[0]) {
				var result = results[0];
				var latLong = result.geometry.location;
				GetLocationInfo(latLong, $('#location').val());
				map.setCenter(latLong);
				$("#location").val("");
			}
			else {
				alert("Location not found");
			}
		});
	}

	function GetLocationInfo(latlng, locationName) {
		if (latlng != null) {
			var point = { LatLng: latlng, LocationName: locationName };
			points.push(point);
			BuildPoints();
        }
	}

	function clearMarkers(){
		for (var i=0; i<markers.length; i++) {
			markers[i].setMap(null);
        }
        markers = [];
    }

    function BuildPoints() {
		clearMarkers();
		var html = "";	
        for (var i=0; i<points.length; i++) {
			var marker = new google.maps.Marker({position: points[i].LatLng, title : points[i].LocationName});
			markers.push(marker);
			marker.setMap(map);		
			html += "<tr><td>" + points[i].LocationName + "</td><td>" + roundNumber(points[i].LatLng.lat(), 6) + "</td><td>" + 
			roundNumber(points[i].LatLng.lng(), 6) + '</td><td><button class="delete" onclick="removeRow(' + i + 
						');">Delete</button></td><td>';
			if (i < points.length-1)
				html += '<button class="moveDown" onclick="moveRowDown(' + i + ');">Move down</button>';
				html += '</td><td>';
				if (i > 0)
					html += '<button class="moveUp" onclick="moveRowUp(' + i + ');">Move up</button>';
					html += '</td></tr>';
        }		
		$("#waypointsLocations tbody").html(html);
		$( "button.delete" ).button({
			icons: { primary: "ui-icon-trash" }
		});
		$( "button.moveDown" ).button({
			icons: { primary: "ui-icon-circle-arrow-s" }
		});
		$( "button.moveUp" ).button({
			icons: { primary: "ui-icon-circle-arrow-n" }
		});
      }
	  
	function ClearPolyLine() {
        points = [];
        BuildPoints();
        ClearRouteDetails();
    }

    function ClearRouteDetails() {
        directionsDisplay.setMap(null);
        directionsDisplay.setPanel(null);
        $("#distance").html("");
        $("#duration").html("");
    }

	function removeRow(index) {
        points.splice(index, 1);
        BuildPoints();
        ClearRouteDetails();
	}

	function moveRowDown(index) {
		var item = points[index];
		points.splice(index, 1);
		points.splice(index+1, 0, item);
		BuildPoints();
        ClearRouteDetails();
	}
			
	function moveRowUp(index) {
		var item = points[index];
		points.splice(index, 1);
		points.splice(index-1, 0, item);
		BuildPoints();
        ClearRouteDetails();
	}
			
			
	
	
	  
    function GetDirections() {
		$("#save_way").removeAttr('disabled');
        var directionsDiv = document.getElementById("directions");
        directionsDiv.innerHTML = "Loading...";
        directionsDisplay.setMap(map);
        directionsDisplay.setPanel(directionsDiv);
        // build array of waypoints (excluding start and end)
        var waypts = [];
        var end = points.length-1;
        var dest = points[end].LatLng;
        if (document.getElementById("roundTrip").checked) {
          end = points.length;
          dest = points[0].LatLng;
        }
        for (var i=1; i<end; i++) {
          waypts.push({location:points[i].LatLng, stopover:true});
        }
		var routeType = $('#routeType').val();
		var travelMode = google.maps.DirectionsTravelMode.DRIVING;
		if (routeType == "Walking")
			travelMode = google.maps.DirectionsTravelMode.WALKING;
		else if (routeType == "Public transport")
			travelMode = google.maps.DirectionsTravelMode.TRANSIT;
		else if (routeType == "Cycling")
			travelMode = google.maps.DirectionsTravelMode.BICYCLING;	
        var optimiseRoute = document.getElementById("optimise").checked;
        var request = {
          origin: points[0].LatLng,
          destination: dest,
          waypoints: waypts,
          travelMode: travelMode,
          optimizeWaypoints: optimiseRoute
        };
        directions.route(request, function(result, status) {
          if (status == google.maps.DirectionsStatus.OK) {
            directionsDiv.innerHTML = "";
            directionsDisplay.setDirections(result);
            // calculate total distance and duration
            var distance = 0;
            var time = 0;
            var theRoute = result.routes[0];
            
			for (var i=0; i<theRoute.legs.length; i++){
              var theLeg = theRoute.legs[i];
              distance += theLeg.distance.value;
              time += theLeg.duration.value;
            }
			
            $("#distance").html("Total distance: " + showDistance(distance) + ", ");
            $("#duration").html("total duration: " + Math.round(time/60) + " minutes");
          }
          else {
            var statusText = getDirectionStatusText(status);
            directionsDiv.innerHTML = "An error occurred - " + statusText;
          }
        });
      }
	  
	function save_waypoints(){
	
		var w=[],wp;
		var end = directionsDisplay.directions.routes[0].legs.length-1;
        var dest = directionsDisplay.directions.routes[0].legs[end];
		var rleg = directionsDisplay.directions.routes[0].legs[0];
		data.start = {'lat': rleg.start_location.lat(), 'lng':rleg.start_location.lng()}
		data.end = {'lat': dest.end_location.lat(), 'lng':dest.end_location.lng()}
		//other marker beside start and end
		// var wp = directionsDisplay.directions.routes[0];
		// for(var i=1;i=end;i++)
		// {
			// w[i] = [wp.legs[i].start_location.lat(),wp.legs[i].start_location.lng()];
		// }
		// console.log(directionsDisplay.directions.routes[0]);
		// console.log(directionsDisplay.directions.routes[0].legs.length);
		for(var d=0; d<directionsDisplay.directions.routes[0].legs.length; d++){
			// var wp[d] = [directionsDisplay.directions.routes[0].legs[d].via_waypoints];
			// console.log(wp_all.length);
			 // w[i] = [wp[i].lat(),wp[i].lng()];
			// console.log(test[d].lat());
			
			
		}
		console.log(wp);
		// var wp = rleg.via_waypoints;
		// for(var i=0;i<wp.length;i++)
			// w[i] = [wp[i].lat(),wp[i].lng()];
			// console.log(w);
		data.waypoints = w;
		var str = JSON.stringify(data);
		var jax = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');
		jax.open('POST',base_url+'/index.php/google/save_points');
		jax.setRequestHeader('Content-Type','application/x-www-form-urlencoded');
		jax.send('command=save&mapdata='+str)
		jax.onreadystatechange = function(){ 
			if(jax.readyState==4) {
				if(jax.responseText.indexOf('bien')+1){
					smoke.signal("Route saved", function(e){
					}, {
						duration: 9999
					});
				}
				else{ 
					alert(jax.responseText);
				}
			}
		}
	}



  </script>
  </body>
</html>
